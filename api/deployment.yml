---
# Admin Role - used by the api to do whatever it wants inside the cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-admin
rules:
  - apiGroups: [""]
    resources:
      ["pods", "pods/log", "services", "namespaces", "deployments", "jobs"]
    verbs: ["get", "watch", "list"]
---
# Referred by the deployment to use the admin role
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fastapi-service-account

---
# RoleBinding - bind the admin role to the service account used by the api
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-binding
subjects:
  - kind: ServiceAccount
    name: fastapi-service-account
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  labels:
    app: fastapi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      serviceAccountName: fastapi-service-account
      containers:
        - name: fastapi
          image: api:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 5
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app: fastapi
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: fastapi
